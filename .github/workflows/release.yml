name: Build and Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    strategy:
      matrix:
        include:
          - platform: linux
            arch: amd64
          - platform: linux
            arch: arm64
          - platform: darwin
            arch: arm64
    
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.24'

      - name: Build binary
        env:
          GOOS: ${{ matrix.platform }}
          GOARCH: ${{ matrix.arch }}
        run: |
          go build -o beachhead-${{ matrix.platform }}-${{ matrix.arch }} .

      - name: Create GitHub Release
        id: create_release
        if: matrix.platform == 'linux' && matrix.arch == 'amd64'
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./beachhead-${{ matrix.platform }}-${{ matrix.arch }}
          asset_name: beachhead-${{ matrix.platform }}-${{ matrix.arch }}
          asset_content_type: application/octet-stream
